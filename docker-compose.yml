#'docker-compose build' command will use this file
#docker-compose syntax version
version: '3.9'

#services required for the application are defining below
services:
  #service name
  app:
    #build docker in current directory, . means use current directory
    build: 
      context: .
      #creating a build argument called DEV and setting value as true. this is to not install dev 
      #requiremnts to prod build
      args:
        - DEV=true
    #port mapping, connect from localsystem port to docker container port, first value is localhost port,
    #second is container port
    ports:
      - "8000:8000"
    #volume mapping, mapping directory from local system to docker container, 
    #so changes will reflect real time instead of rebuilding container
    #adding in local system will map to container and viceversa
    volumes:
      - ./app:/app
    #default command used to run the service, we can override it while running docker-compose run
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

    environment:
      - DB_HOST=db #db is name of the service which is defined below 
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db #app service will wait till db service is up, app depends on db
  db: #service name
    image: postgres:13-alpine #image used from dockerhub to run this service
    volumes:
      - dev-db-data:/var/lib/postgresql/data # /var/lib path is default path where postregres stores data,we 
      #are mapping it with our local system
    environment: #env variables for db configurations
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
volumes:
  dev-db-data: #this will store to deafult location in our local filesystem which is /app